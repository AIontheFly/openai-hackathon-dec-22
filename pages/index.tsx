import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import Whisper from "./api/whisper";

import { Configuration, OpenAIApi } from "openai";

const configuration = new Configuration({
  apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,
});
const openai = new OpenAIApi(configuration);

export default function Home() {
  const [text, setText] = useState("");
  const [response, setResponse] = useState("");

  const [textHistory, setTextHistory] = useState([]);
  const [responseHistory, setResponseHistory] = useState([]);

  // When response is updated, playback response
  useEffect(() => {
    const synth = window.speechSynthesis;
    const voices = synth.getVoices();
    const sayThis = new SpeechSynthesisUtterance(response);
    sayThis.voice = voices[0]; // 0, 17, 10, 60, 58, 53, 51, 50, 49, 39, 33, 26
    sayThis.rate = 1;
    synth.speak(sayThis);
  }, [response]);

  const sendQuery = async (prompt: string): Promise<void> => {
    const completion: any = await openai.createCompletion({
      model: "text-davinci-003",
      prompt,
      max_tokens: 250,
    });
    setResponse(await completion.data.choices[0].text);
  };

  useEffect(() => {
    if (text === "") {
      return;
    }
    sendQuery(text);
    setTextHistory([...textHistory, text]);
    setText("");
  }, [text]);

  useEffect(() => {
    setResponseHistory([...responseHistory, response]);
  }, [response]);

  return (
    <div className={styles.container}>
      <Head>
        {/* <title>INSERT TITLE HERE</title> */}
        <meta name="description" content="Generated by create next app" />
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>

      <main className={styles.main}>
        <Whisper setText={setText}></Whisper>
        <div>Prompt: {textHistory}</div>
        <div>Response: {responseHistory}</div>
      </main>

      <footer className={styles.footer}>
        {/* FOOTER CONTENT */}
      </footer>
    </div>
  );
}
